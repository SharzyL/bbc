// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: bbc.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// basic types
type HashVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *HashVal) Reset() {
	*x = HashVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashVal) ProtoMessage() {}

func (x *HashVal) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashVal.ProtoReflect.Descriptor instead.
func (*HashVal) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{0}
}

func (x *HashVal) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type Sig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *Sig) Reset() {
	*x = Sig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sig) ProtoMessage() {}

func (x *Sig) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sig.ProtoReflect.Descriptor instead.
func (*Sig) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{1}
}

func (x *Sig) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type PubKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *PubKey) Reset() {
	*x = PubKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubKey) ProtoMessage() {}

func (x *PubKey) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubKey.ProtoReflect.Descriptor instead.
func (*PubKey) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{2}
}

func (x *PubKey) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// TxIn is the input transaction, it points to the PrevOutIdx-th TxOut of the transaction of hash PrevTx
// To verify the ownerness, Sig should be equal to SigAlgorithm(txout.ReceiverPubKey, PrevTx + PrevOutIdx)
type TxIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevTx     *HashVal `protobuf:"bytes,1,opt,name=prev_tx,json=prevTx,proto3" json:"prev_tx,omitempty"`
	PrevOutIdx uint32   `protobuf:"varint,2,opt,name=prev_out_idx,json=prevOutIdx,proto3" json:"prev_out_idx,omitempty"`
	Sig        *Sig     `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *TxIn) Reset() {
	*x = TxIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxIn) ProtoMessage() {}

func (x *TxIn) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxIn.ProtoReflect.Descriptor instead.
func (*TxIn) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{3}
}

func (x *TxIn) GetPrevTx() *HashVal {
	if x != nil {
		return x.PrevTx
	}
	return nil
}

func (x *TxIn) GetPrevOutIdx() uint32 {
	if x != nil {
		return x.PrevOutIdx
	}
	return 0
}

func (x *TxIn) GetSig() *Sig {
	if x != nil {
		return x.Sig
	}
	return nil
}

type TxOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value          uint64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	ReceiverPubKey *PubKey `protobuf:"bytes,2,opt,name=receiver_pub_key,json=receiverPubKey,proto3" json:"receiver_pub_key,omitempty"`
}

func (x *TxOut) Reset() {
	*x = TxOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOut) ProtoMessage() {}

func (x *TxOut) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOut.ProtoReflect.Descriptor instead.
func (*TxOut) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{4}
}

func (x *TxOut) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TxOut) GetReceiverPubKey() *PubKey {
	if x != nil {
		return x.ReceiverPubKey
	}
	return nil
}

type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid     bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	TxInList  []*TxIn  `protobuf:"bytes,2,rep,name=tx_in_list,json=txInList,proto3" json:"tx_in_list,omitempty"`
	TxOutList []*TxOut `protobuf:"bytes,3,rep,name=tx_out_list,json=txOutList,proto3" json:"tx_out_list,omitempty"`
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{5}
}

func (x *Tx) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Tx) GetTxInList() []*TxIn {
	if x != nil {
		return x.TxInList
	}
	return nil
}

func (x *Tx) GetTxOutList() []*TxOut {
	if x != nil {
		return x.TxOutList
	}
	return nil
}

type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevHash    *HashVal `protobuf:"bytes,1,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	MerkleRoot  *HashVal `protobuf:"bytes,2,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Timestamp   int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height      int64    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	BlockNounce []byte   `protobuf:"bytes,5,opt,name=block_nounce,json=blockNounce,proto3" json:"block_nounce,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{6}
}

func (x *BlockHeader) GetPrevHash() *HashVal {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *BlockHeader) GetMerkleRoot() *HashVal {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *BlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockHeader) GetBlockNounce() []byte {
	if x != nil {
		return x.BlockNounce
	}
	return nil
}

type TxMerkleNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash *HashVal `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TxMerkleNode) Reset() {
	*x = TxMerkleNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxMerkleNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxMerkleNode) ProtoMessage() {}

func (x *TxMerkleNode) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxMerkleNode.ProtoReflect.Descriptor instead.
func (*TxMerkleNode) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{7}
}

func (x *TxMerkleNode) GetHash() *HashVal {
	if x != nil {
		return x.Hash
	}
	return nil
}

type FullBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     *BlockHeader    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TxList     []*Tx           `protobuf:"bytes,2,rep,name=tx_list,json=txList,proto3" json:"tx_list,omitempty"`
	MerkleTree []*TxMerkleNode `protobuf:"bytes,3,rep,name=merkle_tree,json=merkleTree,proto3" json:"merkle_tree,omitempty"`
}

func (x *FullBlock) Reset() {
	*x = FullBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullBlock) ProtoMessage() {}

func (x *FullBlock) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullBlock.ProtoReflect.Descriptor instead.
func (*FullBlock) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{8}
}

func (x *FullBlock) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FullBlock) GetTxList() []*Tx {
	if x != nil {
		return x.TxList
	}
	return nil
}

func (x *FullBlock) GetMerkleTree() []*TxMerkleNode {
	if x != nil {
		return x.MerkleTree
	}
	return nil
}

//--------------------
// PeekChain
//--------------------
type PeekChainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopHash *HashVal `protobuf:"bytes,1,opt,name=top_hash,json=topHash,proto3" json:"top_hash,omitempty"`
}

func (x *PeekChainReq) Reset() {
	*x = PeekChainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeekChainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekChainReq) ProtoMessage() {}

func (x *PeekChainReq) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekChainReq.ProtoReflect.Descriptor instead.
func (*PeekChainReq) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{9}
}

func (x *PeekChainReq) GetTopHash() *HashVal {
	if x != nil {
		return x.TopHash
	}
	return nil
}

type PeekChainAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a sequence of headers from newest to latest
	Headers []*BlockHeader `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *PeekChainAns) Reset() {
	*x = PeekChainAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeekChainAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekChainAns) ProtoMessage() {}

func (x *PeekChainAns) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekChainAns.ProtoReflect.Descriptor instead.
func (*PeekChainAns) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{10}
}

func (x *PeekChainAns) GetHeaders() []*BlockHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

//--------------------
// AdverticeBlock
//--------------------
type AdverticeBlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *BlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Addr   string       `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *AdverticeBlockReq) Reset() {
	*x = AdverticeBlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdverticeBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdverticeBlockReq) ProtoMessage() {}

func (x *AdverticeBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdverticeBlockReq.ProtoReflect.Descriptor instead.
func (*AdverticeBlockReq) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{11}
}

func (x *AdverticeBlockReq) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *AdverticeBlockReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type AdverticeBlockAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdverticeBlockAns) Reset() {
	*x = AdverticeBlockAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdverticeBlockAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdverticeBlockAns) ProtoMessage() {}

func (x *AdverticeBlockAns) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdverticeBlockAns.ProtoReflect.Descriptor instead.
func (*AdverticeBlockAns) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{12}
}

//--------------------
// AdverticeBlock
//--------------------
type UploadTxAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadTxAns) Reset() {
	*x = UploadTxAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bbc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadTxAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTxAns) ProtoMessage() {}

func (x *UploadTxAns) ProtoReflect() protoreflect.Message {
	mi := &file_bbc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTxAns.ProtoReflect.Descriptor instead.
func (*UploadTxAns) Descriptor() ([]byte, []int) {
	return file_bbc_proto_rawDescGZIP(), []int{13}
}

var File_bbc_proto protoreflect.FileDescriptor

var file_bbc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x62, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x62, 0x63,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x68, 0x56, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x6e, 0x12, 0x2b, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x56, 0x61,
	0x6c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x76, 0x54, 0x78, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x76, 0x4f, 0x75, 0x74, 0x49, 0x64, 0x78, 0x12, 0x20, 0x0a, 0x03, 0x73,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x5a, 0x0a,
	0x05, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x7b, 0x0a, 0x02, 0x54, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x62, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x52, 0x08, 0x74, 0x78, 0x49, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x62, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x52, 0x09, 0x74, 0x78, 0x4f,
	0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x62, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x0c, 0x54, 0x78, 0x4d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x9d, 0x01,
	0x0a, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x62,
	0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x07, 0x74,
	0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62,
	0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x52, 0x06, 0x74, 0x78, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x74, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x22, 0x3d, 0x0a,
	0x0c, 0x50, 0x65, 0x65, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x56, 0x61, 0x6c, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x48, 0x61, 0x73, 0x68, 0x22, 0x40, 0x0a, 0x0c,
	0x50, 0x65, 0x65, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x57,
	0x0a, 0x11, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x6e, 0x73, 0x22, 0x0d, 0x0a, 0x0b,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x78, 0x41, 0x6e, 0x73, 0x32, 0x81, 0x02, 0x0a, 0x05,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x6b, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x17, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x65, 0x65, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62, 0x62,
	0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x65, 0x6b, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x41, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41,
	0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x1a, 0x14, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x08,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x78, 0x12, 0x0d, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x1a, 0x16, 0x2e, 0x62, 0x62, 0x63, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x78, 0x41, 0x6e, 0x73, 0x42,
	0x1b, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x68,
	0x61, 0x72, 0x7a, 0x79, 0x4c, 0x2f, 0x62, 0x62, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bbc_proto_rawDescOnce sync.Once
	file_bbc_proto_rawDescData = file_bbc_proto_rawDesc
)

func file_bbc_proto_rawDescGZIP() []byte {
	file_bbc_proto_rawDescOnce.Do(func() {
		file_bbc_proto_rawDescData = protoimpl.X.CompressGZIP(file_bbc_proto_rawDescData)
	})
	return file_bbc_proto_rawDescData
}

var file_bbc_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_bbc_proto_goTypes = []interface{}{
	(*HashVal)(nil),           // 0: bbc_proto.HashVal
	(*Sig)(nil),               // 1: bbc_proto.Sig
	(*PubKey)(nil),            // 2: bbc_proto.PubKey
	(*TxIn)(nil),              // 3: bbc_proto.TxIn
	(*TxOut)(nil),             // 4: bbc_proto.TxOut
	(*Tx)(nil),                // 5: bbc_proto.Tx
	(*BlockHeader)(nil),       // 6: bbc_proto.BlockHeader
	(*TxMerkleNode)(nil),      // 7: bbc_proto.TxMerkleNode
	(*FullBlock)(nil),         // 8: bbc_proto.FullBlock
	(*PeekChainReq)(nil),      // 9: bbc_proto.PeekChainReq
	(*PeekChainAns)(nil),      // 10: bbc_proto.PeekChainAns
	(*AdverticeBlockReq)(nil), // 11: bbc_proto.AdverticeBlockReq
	(*AdverticeBlockAns)(nil), // 12: bbc_proto.AdverticeBlockAns
	(*UploadTxAns)(nil),       // 13: bbc_proto.UploadTxAns
}
var file_bbc_proto_depIdxs = []int32{
	0,  // 0: bbc_proto.TxIn.prev_tx:type_name -> bbc_proto.HashVal
	1,  // 1: bbc_proto.TxIn.sig:type_name -> bbc_proto.Sig
	2,  // 2: bbc_proto.TxOut.receiver_pub_key:type_name -> bbc_proto.PubKey
	3,  // 3: bbc_proto.Tx.tx_in_list:type_name -> bbc_proto.TxIn
	4,  // 4: bbc_proto.Tx.tx_out_list:type_name -> bbc_proto.TxOut
	0,  // 5: bbc_proto.BlockHeader.prev_hash:type_name -> bbc_proto.HashVal
	0,  // 6: bbc_proto.BlockHeader.merkle_root:type_name -> bbc_proto.HashVal
	0,  // 7: bbc_proto.TxMerkleNode.hash:type_name -> bbc_proto.HashVal
	6,  // 8: bbc_proto.FullBlock.header:type_name -> bbc_proto.BlockHeader
	5,  // 9: bbc_proto.FullBlock.tx_list:type_name -> bbc_proto.Tx
	7,  // 10: bbc_proto.FullBlock.merkle_tree:type_name -> bbc_proto.TxMerkleNode
	0,  // 11: bbc_proto.PeekChainReq.top_hash:type_name -> bbc_proto.HashVal
	6,  // 12: bbc_proto.PeekChainAns.headers:type_name -> bbc_proto.BlockHeader
	6,  // 13: bbc_proto.AdverticeBlockReq.header:type_name -> bbc_proto.BlockHeader
	9,  // 14: bbc_proto.Miner.PeekChain:input_type -> bbc_proto.PeekChainReq
	11, // 15: bbc_proto.Miner.AdverticeBlock:input_type -> bbc_proto.AdverticeBlockReq
	0,  // 16: bbc_proto.Miner.GetFullBlock:input_type -> bbc_proto.HashVal
	5,  // 17: bbc_proto.Miner.UploadTx:input_type -> bbc_proto.Tx
	10, // 18: bbc_proto.Miner.PeekChain:output_type -> bbc_proto.PeekChainAns
	12, // 19: bbc_proto.Miner.AdverticeBlock:output_type -> bbc_proto.AdverticeBlockAns
	8,  // 20: bbc_proto.Miner.GetFullBlock:output_type -> bbc_proto.FullBlock
	13, // 21: bbc_proto.Miner.UploadTx:output_type -> bbc_proto.UploadTxAns
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_bbc_proto_init() }
func file_bbc_proto_init() {
	if File_bbc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bbc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxMerkleNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeekChainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeekChainAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdverticeBlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdverticeBlockAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bbc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadTxAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bbc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bbc_proto_goTypes,
		DependencyIndexes: file_bbc_proto_depIdxs,
		MessageInfos:      file_bbc_proto_msgTypes,
	}.Build()
	File_bbc_proto = out.File
	file_bbc_proto_rawDesc = nil
	file_bbc_proto_goTypes = nil
	file_bbc_proto_depIdxs = nil
}
